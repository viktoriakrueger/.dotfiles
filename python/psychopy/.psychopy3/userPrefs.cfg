
# This file specifies defaults for psychopy prefs for Darwin.

# !! This file is auto-generated and will be overwritten!!
# Edit baseNoArch.spec (all platforms) or generateSpec.py
# (platform-specific) instead.

# Notes on usage for developers (not needed or intended for use when making or running experiments):
# - baseNoArch.spec is copied & edited to be platform specific when you run generateSpec.py
# - the resulting files are parsed by configobj at psychopy run time, for the user's platform
# - To make changes to prefs for all platforms: 1) edit baseNoArch.spec, 2) run generateSpec.py, 3) commit
# - To make a platform specific pref change, 1) edit generateSpec.py as needed, 2) run generateSpec.py, 3) commit
# - If this file is NOT named baseNoArch.spec, it will be auto-generated.

# The syntax of this file is as expected by ConfigObj (not python):
# - Put a tooltip in a comment just prior to the line:
# - Each line should have a default= ___, and it should appear as the last item on the line

#   [section_name]
#      # comment lines not right above a pref are not used in tooltips
#      # the tooltip for prefName1 goes here, on the line right above its spec
#      prefName1 = type(value1, value2, ..., default='___')

# NOT_IMPLEMENTED defaultTimeUnits = option('sec', 'frames', default='sec')


# General settings
[general]
    # which system to use as a backend for drawing
    winType = pyglet
    # the default units for windows and visual stimuli
    units = norm
    # full screen is best for accurate timing
    fullscr = False
    # enable subjects to use the mouse and GUIs during experiments
    allowGUI = True
    # 'version' is for internal usage, not for the user
    version = ""
    # Add paths here to your custom Python modules
    paths = ,
    # path to flac (lossless audio compression) on this operating system
    flac = ""
    # Shutdown keys, following the pyglet naming scheme.
    shutdownKey = ""
    # Modifier keys for shutdown keys
    shutdownKeyModifiers = ,
    # What to do if gamma-correction not possible
    gammaErrorPolicy = abort
    # Add plugin names here to load when a PsychoPy session starts.
    startUpPlugins = ,
    # Google Cloud Platform key, required for the audio transcription using Google Speech Recognition. Specified as a path to a JSON file containing the key data.
    appKeyGoogleCloud = ""

# Application settings, applied to coder, builder, & prefs windows
[app]
    # display tips when starting PsychoPy
    showStartupTips = False
    # what windows to display when PsychoPy starts
    defaultView = all
    # reset preferences to defaults on next restart of PsychoPy
    resetPrefs = False                         # default must be False!
    # save any unsaved preferences before closing the window
    autoSavePrefs = False
    # enable features for debugging PsychoPy itself, including unit-tests
    debugMode = False
    # language to use in menus etc; not all translations are available. Select a value, then restart the app.
    locale = en_US
    # Show an error dialog when PsychoPy encounters an unhandled internal error.
    errorDialog = True
    # Theme
    theme = dracula

# Settings for the Coder window
[coder]
    # open Coder files as read-only (allows running without accidental changes)
    readonly = False
    # a list of font names; the first one found on the system will be used
    outputFont = From theme...
    # a list of font names; the first one found on the system will be used
    codeFont = From theme...
    # Font size (in pts) takes an integer between 6 and 24
    codeFontSize = 14
    # Font size (in pts) takes an integer between 6 and 24
    outputFontSize = 14
    # Spacing between lines
    lineSpacing = 4
    # Long line edge guide, specify zero to disable
    edgeGuideColumn = 80
    # Set the source assistant panel to be visible by default
    showSourceAsst = True
    # Set the output/shell to be visible by default
    showOutput = True
    # Show code completion suggestion and calltips automatically when typing.
    autocomplete = True
    # reload previously opened files after start
    reloadPrevFiles = True
    # for coder shell window, which shell to use
    preferredShell = pyshell

# Settings for the Builder window
[builder]
    # whether to automatically reload a previously open experiment
    reloadPrevExp = True
    # Default to when writing code components
    codeComponentLanguage = Auto->JS
    # if False will create scripts with an 'easier' but more cluttered namespace
    unclutteredNamespace = False
    # folder names for custom components; expects a comma-separated list
    componentsFolders = /Users/Shared/PsychoPy3/components,
    # Only show components which work in...
    componentFilter = Any
    # a list of components to hide (eg, because you never use them)
    hiddenComponents = RatingScaleComponent, PatchComponent, UnknownComponent
    # where the Builder demos are located on this computer (after unpacking)
    unpackedDemosDir = ""
    # name of the folder where subject data should be saved (relative to the script)
    savedDataFolder = data
    # Panels arrangement: Should Flow be on the top or bottom, and should Components be on the left or right?
    builderLayout = FlowBottom_CompRight
    # Display text in a floating window that describes the experiment
    alwaysShowReadme = True
    # Upper limit on how many components can be in favorites
    maxFavorites = 10
    # Ask for confirmation when closing a routine tab.
    confirmRoutineClose = True

# Settings for hardware
[hardware]
    # choice of audio library
    audioLib = sounddevice, PTB, pyo, pygame
    # latency mode for PsychToolbox audio (3 is good for most applications. See
    audioLatencyMode = 3
    # audio driver to use
    audioDriver = coreaudio, portaudio
    # audio device to use (if audioLib allows control)
    audioDevice = default,
    # a list of parallel ports
    parallelPorts = 0x0378, 0x03BC, /dev/parport0, /dev/parport1
    # The name of the Qmix pump configuration to use
    qmixConfiguration = qmix_config

# Settings for connections
[connections]
    # the http proxy for usage stats and auto-updating; format is host: port
    proxy = ""
    # override the above proxy settings with values found in the environment (if possible)
    autoProxy = True
    # allow PsychoPy to send anonymous usage stats; please allow if possible, it helps PsychoPy's development
    allowUsageStats = True
    # allow PsychoPy to check for new features and bug fixes
    checkForUpdates = True
    # max time to wait for a connection response
    timeout = 20.0

# KeyBindings; new key bindings only take effect on restart; Ctrl not available on Mac (use Cmd)
[keyBindings]
    # open an existing file
    open = Ctrl+O
    # start a new experiment or script
    new = Ctrl+N
    # save a Builder or Coder file
    save = Ctrl+S
    # save a Builder or Coder file under a new name
    saveAs = Ctrl+Shift+S
    # Coder: print the file
    print = Ctrl+P
    # close the Builder or Coder window
    close = Ctrl+W
    # end the application (PsychoPy)
    quit = Ctrl+Q
    #open the preferences dialog
    preferences = "Ctrl+,"
    # export Builder experiment to HTML
    exportHTML = Ctrl+E
    
    # Coder: cut
    cut = Ctrl+X
    # Coder: copy
    copy = Ctrl+C
    # Coder: paste
    paste = Ctrl+V
    # Coder: duplicate
    duplicate = Ctrl+D
    # Coder: indent code by one level (4 spaces)
    indent = Ctrl+]
    # Coder: reduce indentation by one level (4 spaces)
    dedent = Ctrl+[
    # Coder: indent to fit python syntax
    smartIndent = Shift+Tab
    # Coder: find
    find = Ctrl+F
    # Coder: find again
    findAgain = Ctrl+G
    # Coder: undo
    undo = Ctrl+Z
    # Coder: redo
    redo = Ctrl+Shift+Z
    # Coder: add a # to the start of the line(s)
    comment = "Ctrl+'"
    # Coder: remove # from start of line(s)
    uncomment = "Ctrl+Shift+'"
    # Coder: add or remove # from start of line(s)
    toggle comment = Ctrl+/
    # Coder: fold this block of code
    fold = Ctrl+Home
    # Coder: increase font size this block of code
    enlargeFont = Ctrl+=
    # Coder: decrease font size this block of code
    shrinkFont = Ctrl+-
    
    # Coder: check for basic syntax errors
    analyseCode = F4
    # convert a Builder .psyexp script into a python script and open it in the Coder
    compileScript = F5
    # launch a script, Builder or Coder, or run unit-tests
    runScript = Ctrl+Shift+R
    # launch a script, Builder or Coder, or run unit-tests
    runnerScript = Ctrl+Alt+R
    # attempt to interrupt and halt a running script
    stopScript = Ctrl+.
    
    # Coder: show / hide white-space dots
    toggleWhitespace = Ctrl+Shift+W
    # Coder: show / hide end of line characters
    toggleEOLs = Ctrl+Shift+L
    # Coder: show / hide indentation level lines
    toggleIndentGuides = Ctrl+Shift+I
    
    # Builder: create a new routine
    newRoutine = Ctrl+Shift+N
    # Builder: copy an existing routine
    copyRoutine = Ctrl+Shift+C
    # Builder: paste the copied routine
    pasteRoutine = Ctrl+Shift+V
    # Builder: paste the copied component
    pasteCompon = Ctrl+Alt+V
    # Coder: show / hide the output panel
    toggleOutputPanel = Ctrl+Shift+O
    #Builder: rename an existing routine
    renameRoutine = Ctrl+Shift+M
    # switch between windows
    cycleWindows = Ctrl+L
    # increase display size in Flow
    largerFlow = Ctrl+=
    # decrease display size in Flow
    smallerFlow = Ctrl+-
    # increase display size of Routines
    largerRoutine = Ctrl+Shift+=                         # on mac book pro this is good
    # decrease display size of Routines
    smallerRoutine = Ctrl+Shift+-
    #show or hide the readme (info) for this experiment if possible
    toggleReadme = Ctrl+I
    
    # Projects: Log in to pavlovia
    pavlovia_logIn = Ctrl+Alt+I
    # Projects: Log in to OSF
    OSF_logIn = Ctrl+Alt+Shift+I
    # Projects: Sync project
    projectsSync = Ctrl+Alt+Y
    # Projects: Find projects
    projectsFind = Ctrl+Shift+F
    # Projects: Open project
    projectsOpen = Ctrl+Alt+O
    # Projects: Create new project
    projectsNew = Ctrl+Alt+N
